@model  EOS2.Web.Areas.Organizations.ViewModels.Common.ChannelViewModel
            
        @{    
            var channelInError = 0;

            if(!ViewData.ModelState.IsValid) {
                var channelError = ViewData.ModelState["ChannelId"];

                if(channelError != null) {
                    channelInError = (int)channelError.Value.ConvertTo(typeof(int));
                }
            }                            
                
            var channelTypes = new SelectList(Model.ChannelTypes, "Id", "Name", Model.SelectedChannelTypeId);
            var equipment = new SelectList(Model.Equipment, "Id", "Name", channelInError == Model.Id && !ViewData.ModelState.IsValidField("SelectedEquipmentTypeId") ? Model.SelectedEquipmentTypeId : 0);
            var scheduleTypes = new SelectList(Model.ScheduleFrequency, "Id", "Name", Model.SelectedScheduleFrequencyId);                
         }           
<tr>
        <td class="col-sm-1">
            <input type="hidden" name="__prefix" value="@ViewData.TemplateInfo.HtmlFieldPrefix" />
            @Html.Hidden("Id", Model.Id)                        
            <div class="form-group" readonly="true">
                @Html.TextBox("Number",Model.Number,new {
           @class = "form-control", @readonly = "true", @disabled = "disabled"
           })
            </div>
        </td>
        <td class="col-sm-2">
            <div class="form-group" readonly="true">
                @Html.TextBox("Name",Model.Name,new {
           @class = "form-control", @readonly = "true", @disabled = "disabled"
           })
            </div>
        </td>
        <td class="col-sm-3">
            <div class="form-group" readonly="true">
                @Html.DropDownList("SelectedChannelTypeId",channelTypes,"[[[Please Select ...]]]",new {
           @class = "form-control", @readonly = "true", @disabled = "disabled"
           })
            </div>
        </td>
        <td class="col-sm-3">
            <div class="@(channelInError == Model.Id && !ViewData.ModelState.IsValidField("SelectedEquipmentTypeId") ? "form-group has-error" : "form-group")">
                @Html.DropDownList("SelectedEquipmentTypeId",equipment,"[[[Please Select ...]]]",new {@class = "form-control"})
            </div>
        </td>
        <td class="col-sm-3">       
            <div class="form-group" readonly="true">
                @Html.DropDownList("SelectedScheduleFrequencyId",scheduleTypes,"[[[Please Select ...]]]",new {
           @class = "form-control", @readonly = "true", @disabled = "disabled"
           })
            </div>
        </td>
        <td class="col-sm-1">
            <button type="submit" class="btn btn-primary">[[[Save]]]</button>
        </td>
</tr>