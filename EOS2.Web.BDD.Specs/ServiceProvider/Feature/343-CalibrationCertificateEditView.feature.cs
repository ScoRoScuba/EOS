// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EOS2.Web.BDD.Specs.ServiceProvider.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("343-CalibrationCertificateEditView")]
    [NUnit.Framework.CategoryAttribute("StoryId_343")]
    public partial class _343_CalibrationCertificateEditViewFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "343-CalibrationCertificateEditView.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "343-CalibrationCertificateEditView", "  As a Service Provider User\r\n  I want to view, download, and print the current c" +
                    "alibration certificate for an instrument\r\n  So that I can prove that the instrum" +
                    "ent is calibrated", ProgrammingLanguage.CSharp, new string[] {
                        "StoryId_343"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get to Certificate Details page")]
        [NUnit.Framework.CategoryAttribute("SingleCalibrationCertificate")]
        public virtual void GetToCertificateDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get to Certificate Details page", new string[] {
                        "SingleCalibrationCertificate"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.And("I am on the \'Instrument Details\' page for customer \'343-Test Customer 1\', site \'3" +
                    "43-Test Site 1\', plant area \'343-Test Plant Area 1\' and instrument \'343-Test Ins" +
                    "trument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
    testRunner.And("Certificate \'343-Test Certificate 1\' is listed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
    testRunner.And("Certificate \'343-Test Certificate 1\' has a \'Details\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.When("I press the \'Details\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.Then("I am on the \'Certificate Details\' page for \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
    testRunner.And("the \'Certificate Number\' textbox displays \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
    testRunner.And("the \'Start Date\' textbox displays \'01/01/2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
    testRunner.And("the \'End Date\' textbox displays \'01/12/2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cancel from Certificate Details page")]
        [NUnit.Framework.CategoryAttribute("SingleCalibrationCertificate")]
        public virtual void CancelFromCertificateDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancel from Certificate Details page", new string[] {
                        "SingleCalibrationCertificate"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.And("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When("I press the \'Cancel\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("I am on the \'Instrument Details\' page for \'343-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save empty form from Certificate Details page")]
        [NUnit.Framework.CategoryAttribute("SingleCalibrationCertificate")]
        public virtual void SaveEmptyFormFromCertificateDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save empty form from Certificate Details page", new string[] {
                        "SingleCalibrationCertificate"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
    testRunner.And("I have cleared the \'Certificate Number\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
    testRunner.And("I have cleared the \'Start Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
    testRunner.And("I have cleared the \'End Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.When("I press the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
    testRunner.And("I am shown the message \"Please enter a Certificate Number\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
    testRunner.And("I am shown the message \"Start Date must be supplied\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
    testRunner.And("I am shown the message \'End Date must be supplied\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save form from Certificate Details page with invalid Start Date & invalid End Dat" +
            "e")]
        [NUnit.Framework.CategoryAttribute("SingleCalibrationCertificate")]
        public virtual void SaveFormFromCertificateDetailsPageWithInvalidStartDateInvalidEndDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save form from Certificate Details page with invalid Start Date & invalid End Dat" +
                    "e", new string[] {
                        "SingleCalibrationCertificate"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.And("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
    testRunner.And("I have entered \'abcdef\' in the \'Start Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
    testRunner.And("I have entered \'ghijkl\' in the \'End Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
    testRunner.When("I press the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.Then("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 47
    testRunner.And("I am shown the message \"The value \'abcdef\' is not valid for Start Date.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
    testRunner.And("I am shown the message \"The value \'ghijkl\' is not valid for End Date.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save form from Certificate Details page with End Date less than Start Date")]
        [NUnit.Framework.CategoryAttribute("SingleCalibrationCertificate")]
        public virtual void SaveFormFromCertificateDetailsPageWithEndDateLessThanStartDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save form from Certificate Details page with End Date less than Start Date", new string[] {
                        "SingleCalibrationCertificate"});
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
 testRunner.And("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
    testRunner.And("I have entered \'01/01/2014\' in the \'Start Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
    testRunner.And("I have entered \'01/12/2013\' in the \'End Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
    testRunner.When("I press the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.Then("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
    testRunner.And("I am shown the message \"End Date must be after Start Date\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save form from Certificate Details page with existing name")]
        [NUnit.Framework.CategoryAttribute("MultipleCalibrationCertificate")]
        public virtual void SaveFormFromCertificateDetailsPageWithExistingName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save form from Certificate Details page with existing name", new string[] {
                        "MultipleCalibrationCertificate"});
#line 61
this.ScenarioSetup(scenarioInfo);
#line 62
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 63
 testRunner.And("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
    testRunner.And("I have entered \'343-Test Certificate 2\' in the \'Certificate Number\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.When("I press the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.Then("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 67
    testRunner.And("I am shown the message \"A certificate with that Certificate Number already exists" +
                    " for this customer\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save complete form from Schedule Details page")]
        [NUnit.Framework.CategoryAttribute("SingleCalibrationCertificate")]
        public virtual void SaveCompleteFormFromScheduleDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save complete form from Schedule Details page", new string[] {
                        "SingleCalibrationCertificate"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
 testRunner.And("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
    testRunner.And("I have entered \'343-Test Certificate 2\' in the \'Certificate Number\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.When("I press the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
 testRunner.Then("I am on the \'Instrument Details\' page for customer \'343-Test Customer 1\', site \'3" +
                    "43-Test Site 1\', plant area \'343-Test Plant Area 1\' and instrument \'343-Test Ins" +
                    "trument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 76
    testRunner.And("I am shown the message \"Certificate 343-Test Certificate 2 saved successfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save complete form from Certificate Details page with new pdf")]
        [NUnit.Framework.CategoryAttribute("SingleCalibrationCertificate")]
        public virtual void SaveCompleteFormFromCertificateDetailsPageWithNewPdf()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save complete form from Certificate Details page with new pdf", new string[] {
                        "SingleCalibrationCertificate"});
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.And("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
    testRunner.And("I have entered the location of a new pdf file in the \'Certificate\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
    testRunner.When("I press the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.Then("I am on the \'Instrument Details\' page for customer \'343-Test Customer 1\', site \'3" +
                    "43-Test Site 1\', plant area \'343-Test Plant Area 1\' and instrument \'343-Test Ins" +
                    "trument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 85
    testRunner.And("I am shown the message \"Certificate 343-Test Certificate 1 saved successfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
    testRunner.And("In the \'Certificates\' panel there is a row for \'349-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
    testRunner.And("certificate \'349-Test Certificate 1\' has a \'View PDF\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
    testRunner.When("I press the \'View PDF\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
    testRunner.Then("the new pdf file is downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View pdf from Certificate Details page")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void ViewPdfFromCertificateDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View pdf from Certificate Details page", new string[] {
                        "SingleInstrument"});
#line 92
this.ScenarioSetup(scenarioInfo);
#line 93
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.And("I am on the \'New Certificate Upload\' page for customer \'343-Test Customer 1\', sit" +
                    "e \'343-Test Site 1\', plant area \'343-Test Plant Area 1\' and instrument \'343-Test" +
                    " Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
    testRunner.And("I have entered \'343-Test Certificate 1\' in the \'Certificate Number\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
    testRunner.And("I have entered \'01/01/2014\' in the \'Start Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
    testRunner.And("I have entered \'01/12/2014\' in the \'End Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
    testRunner.And("I have entered the location of a new pdf file in the \'Certificate\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
    testRunner.When("I press the \'Upload\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
 testRunner.Then("I am on the \'Instrument Details\' page for customer \'343-Test Customer 1\', site \'3" +
                    "43-Test Site 1\', plant area \'343-Test Plant Area 1\' and instrument \'343-Test Ins" +
                    "trument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 101
    testRunner.And("I am shown the message \"Certificate 343-Test Certificate 1 saved successfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
    testRunner.And("In the \'Certificates\' panel there is a row for \'349-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
    testRunner.And("certificate \'349-Test Certificate 1\' has a \'Detail\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
    testRunner.When("I press the \'Detail\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 105
 testRunner.Then("I am on the \'Certificate Details\' page for customer \'343-Test Customer 1\', site \'" +
                    "343-Test Site 1\', plant area \'343-Test Plant Area 1\', instrument \'343-Test Instr" +
                    "ument 1\' and certificate \'343-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 106
    testRunner.And("certificate \'349-Test Certificate 1\' has a \'View PDF\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
    testRunner.When("I press the \'View PDF\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
    testRunner.Then("the pdf file is downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
