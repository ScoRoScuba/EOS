// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EOS2.Web.BDD.Specs.ServiceProvider.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("418-CreateInstrument")]
    [NUnit.Framework.CategoryAttribute("StoryId_418")]
    public partial class _418_CreateInstrumentFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "418-CreateInstrument.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "418-CreateInstrument", @"      As a Service Provider User
      I want to be able to create an Instrument which is unassigned
      So that I can record calibration events and results against that equipment

      As a Service Provider User
      I want to be able to create an Instrument and assign it to multiple pieces of equipment
      So that I can record calibration events and results against that equipment", ProgrammingLanguage.CSharp, new string[] {
                        "StoryId_418"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get to New Instrument page")]
        [NUnit.Framework.CategoryAttribute("SinglePlantArea")]
        public virtual void GetToNewInstrumentPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get to New Instrument page", new string[] {
                        "SinglePlantArea"});
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
    testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
    testRunner.And("I am on the \'Plant Area Details\' page for customer \'418-Test Customer 1\', site \'4" +
                    "18-Test Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
    testRunner.And("the add button text is \'Add Instrument\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
    testRunner.When("I click the \'Add Instrument\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
    testRunner.Then("the \'New Instrument\' page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cancel from New Instrument page")]
        [NUnit.Framework.CategoryAttribute("SinglePlantArea")]
        public virtual void CancelFromNewInstrumentPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancel from New Instrument page", new string[] {
                        "SinglePlantArea"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
    testRunner.And("I am on the \'New Instrument\' page for customer \'418-Test Customer 1\', site \'418-T" +
                    "est Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.When("I press the \'Cancel\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("I am on the \'Plant Area Details\' page for plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save empty form from New Instrument page")]
        [NUnit.Framework.CategoryAttribute("SinglePlantArea")]
        public virtual void SaveEmptyFormFromNewInstrumentPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save empty form from New Instrument page", new string[] {
                        "SinglePlantArea"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
    testRunner.And("I am on the \'New Instrument\' page for customer \'418-Test Customer 1\', site \'418-T" +
                    "est Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.When("I press the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then("I am on the \'New Instrument\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
    testRunner.And("I am shown the message \"Please enter the name for your instrument\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
    testRunner.And("I am shown the message \"Please select a Type\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
    testRunner.And("I am shown the message \'Please select a Calibration Frequency\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save form from New Instrument page with invalid name")]
        [NUnit.Framework.CategoryAttribute("SinglePlantArea")]
        public virtual void SaveFormFromNewInstrumentPageWithInvalidName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save form from New Instrument page with invalid name", new string[] {
                        "SinglePlantArea"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 40
    testRunner.And("I am on the \'New Instrument\' page for customer \'418-Test Customer 1\', site \'418-T" +
                    "est Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
    testRunner.And("I have entered \'12345678901234567890123456789012345678901234567890123456789012345" +
                    "67890123456789012345678901234567890123456789012345678901\' in the \'Name\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
    testRunner.And("I have selected \'Analyzer\' in the \'Instrument Type\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
    testRunner.And("I have selected \'None\' in the \'Calibration Frequency\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.When("I press the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.Then("I am on the \'New Instrument\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
    testRunner.And("I am shown the message \"Maximum Length is 120 Characters\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save form from New Instrument page with existing name")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void SaveFormFromNewInstrumentPageWithExistingName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save form from New Instrument page with existing name", new string[] {
                        "SingleInstrument"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line 50
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 51
    testRunner.And("I am on the \'New Instrument\' page for customer \'418-Test Customer 1\', site \'418-T" +
                    "est Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
    testRunner.And("I have entered \'418-Test Instrument 1\' in the \'Name\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
    testRunner.And("I have selected \'Analyzer\' in the \'Instrument Type\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
    testRunner.And("I have selected \'None\' in the \'Calibration Frequency\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.When("I press the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
 testRunner.Then("I am on the \'New Instrument\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
    testRunner.And("I am shown the message \"An instrument with that Name already exists for this Plan" +
                    "t Area\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save complete form from New Instrument page")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void SaveCompleteFormFromNewInstrumentPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save complete form from New Instrument page", new string[] {
                        "SingleInstrument"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
    testRunner.And("I am on the \'New Instrument\' page for customer \'418-Test Customer 1\', site \'418-T" +
                    "est Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
    testRunner.And("I have entered \'418-Test Site\' in the \'Name\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
    testRunner.And("I have selected \'Analyzer\' in the \'Instrument Type\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
    testRunner.And("I have selected \'None\' in the \'Calibration Frequency\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.When("I press the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.Then("I am on the \'Instrument Details\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
    testRunner.And("I am shown the message \"Instrument 418-Test Site saved successfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Attach an Instrument to a piece of Equipment (single Equipment Exists)")]
        [NUnit.Framework.CategoryAttribute("SingleInstrumentSingleEquipment")]
        public virtual void AttachAnInstrumentToAPieceOfEquipmentSingleEquipmentExists()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Attach an Instrument to a piece of Equipment (single Equipment Exists)", new string[] {
                        "SingleInstrumentSingleEquipment"});
#line 71
this.ScenarioSetup(scenarioInfo);
#line 72
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 73
    testRunner.And("I am on the \'Instrument Details\' page for customer \'418-Test Customer 1\', site \'4" +
                    "18-Test Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
    testRunner.And("The \'Equipment Attached\' panel is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
    testRunner.And("I have selected \'418-Test Equipment 1\' from the \'Equipment Attached\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
    testRunner.When("I press the \'Attach Selected Equipment\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
    testRunner.Then("I am on the \'Instrument Details\' page for customer \'418-Test Customer 1\', site \'4" +
                    "18-Test Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 78
    testRunner.And("I am shown the message \'Equipment attached successfully\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
    testRunner.And("\'418-Test Equipment 1\' is listed in the \'Equipment Attached\' panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
    testRunner.And("The \'Equipment Attached\' dropdown is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
    testRunner.And("The \'Attach Selected Equipment\' button is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Attach an Instrument to a piece of Equipment (multiple Equipment Exists)")]
        [NUnit.Framework.CategoryAttribute("SingleInstrumentMultipleEquipment")]
        public virtual void AttachAnInstrumentToAPieceOfEquipmentMultipleEquipmentExists()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Attach an Instrument to a piece of Equipment (multiple Equipment Exists)", new string[] {
                        "SingleInstrumentMultipleEquipment"});
#line 84
this.ScenarioSetup(scenarioInfo);
#line 85
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
    testRunner.And("I am on the \'Instrument Details\' page for customer \'418-Test Customer 1\', site \'4" +
                    "18-Test Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
    testRunner.And("The \'Equipment Attached\' panel is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
    testRunner.And("I have selected \'418-Test Equipment 1\' from the \'Equipment Attached\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
    testRunner.When("I press the \'Attach Selected Equipment\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
    testRunner.Then("I am on the \'Instrument Details\' page for customer \'418-Test Customer 1\', site \'4" +
                    "18-Test Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 91
    testRunner.And("I am shown the message \'Equipment attached successfully\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
    testRunner.And("\'418-Test Equipment 1\' is listed in the \'Equipment Attached\' panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
    testRunner.And("The \'Equipment Attached\' dropdown is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
    testRunner.And("\'418-Test Equipment 1\' is not in the dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
    testRunner.And("The \'Attach Selected Equipment\' button is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Attach an Instrument to a multiple pieces of Equipment")]
        [NUnit.Framework.CategoryAttribute("SingleInstrumentMultipleEquipmentSingleAttached")]
        public virtual void AttachAnInstrumentToAMultiplePiecesOfEquipment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Attach an Instrument to a multiple pieces of Equipment", new string[] {
                        "SingleInstrumentMultipleEquipmentSingleAttached"});
#line 98
this.ScenarioSetup(scenarioInfo);
#line 99
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 100
    testRunner.And("I am on the \'Instrument Details\' page for customer \'418-Test Customer 1\', site \'4" +
                    "18-Test Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
    testRunner.And("The \'Equipment Attached\' panel is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
    testRunner.And("\'418-Test Equipment 1\' is listed in the \'Equipment Attaached\' panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
    testRunner.And("I have selected \'418-Test Equipment 2\' from the \'Equipment Attached\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
    testRunner.When("I press the \'Attach Selected Equipment\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 105
    testRunner.Then("I am on the \'Instrument Details\' page for customer \'418-Test Customer 1\', site \'4" +
                    "18-Test Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 106
    testRunner.And("I am shown the message \'Equipment attached successfully\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
    testRunner.And("\'418-Test Equipment 1\' is listed in the \'Equipment Attached\' panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
    testRunner.And("\'418-Test Equipment 2\' is listed in the \'Equipment Attached\' panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Detach an Instrument from a piece of Equipment")]
        [NUnit.Framework.CategoryAttribute("SingleInstrumentMultiEquipmentSingleAttached")]
        public virtual void DetachAnInstrumentFromAPieceOfEquipment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Detach an Instrument from a piece of Equipment", new string[] {
                        "SingleInstrumentMultiEquipmentSingleAttached"});
#line 111
this.ScenarioSetup(scenarioInfo);
#line 112
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
    testRunner.And("I am on the \'Instrument Details\' page for customer \'418-Test Customer 1\', site \'4" +
                    "18-Test Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
    testRunner.And("The \'Equipment Attached\' panel is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
    testRunner.And("\'418-Test Equipment 1\' is listed in the \'Equipment Attaached\' panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
    testRunner.And("\'418-Test Equipment 1\' has a \'Detach\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
    testRunner.When("I press the \'Detach\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
    testRunner.Then("I am on the \'Instrument Details\' page for customer \'418-Test Customer 1\', site \'4" +
                    "18-Test Site 1\' and plant area \'418-Test Plant Area 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 119
    testRunner.And("I am shown the message \'Equipment 418-Test Equipment 1 detached successfully\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
    testRunner.And("\'418-Test Equipment 1\' is not listed in the \'Equipment Attached\' panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
    testRunner.And("\'418-Test Equipment 1\' is listed in the \'Equipment Attached\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
