// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EOS2.Web.BDD.Specs.ServiceProvider.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("349-CalibrationCertificateUpload")]
    [NUnit.Framework.CategoryAttribute("StoryId_349")]
    public partial class _349_CalibrationCertificateUploadFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "349-CalibrationCertificateUpload.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "349-CalibrationCertificateUpload", "  As a Service Provider\r\n  I want to upload a calibration certificate for a selec" +
                    "ted piece of equipment\r\n  So that I can store calibration certificates generated" +
                    " by third parties", ProgrammingLanguage.CSharp, new string[] {
                        "StoryId_349"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get to the Certificate Upload page")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void GetToTheCertificateUploadPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get to the Certificate Upload page", new string[] {
                        "SingleInstrument"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.And("I am on the \'Instrument Details\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
    testRunner.And("the \'Upload Certificate\' button is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.When("I press the \'Upload Certificate\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("I am on the \'New Certificate Upload\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cancel from Certificate Upload page")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void CancelFromCertificateUploadPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancel from Certificate Upload page", new string[] {
                        "SingleInstrument"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.And("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.When("I press the \'Cancel\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.Then("I am on the \'Instrument Details\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save empty form from Certificate Upload page")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void SaveEmptyFormFromCertificateUploadPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save empty form from Certificate Upload page", new string[] {
                        "SingleInstrument"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 25
 testRunner.And("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.When("I press the \'Upload\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.Then("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
    testRunner.And("I am shown the message \"Please enter a Certificate Number\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
    testRunner.And("I am shown the message \"Please enter a Start Date\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
    testRunner.And("I am shown the message \"Please enter a End Date\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save form from New Certificate Upload page with invalid Start Date")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void SaveFormFromNewCertificateUploadPageWithInvalidStartDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save form from New Certificate Upload page with invalid Start Date", new string[] {
                        "SingleInstrument"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.And("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
    testRunner.And("I have entered \'abcdef\' in the \'Start Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
    testRunner.And("I have entered \'349-Test Certificate 1\' in the \'Certificate Number\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
    testRunner.And("I have entered \'01/12/2014\' in the \'End Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.When("I press the \'Upload\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.Then("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
    testRunner.And("I am shown the message \"The value \'abcdef\' is not valid for Start Date.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save form from New Certificate Upload page with invalid End Date")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void SaveFormFromNewCertificateUploadPageWithInvalidEndDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save form from New Certificate Upload page with invalid End Date", new string[] {
                        "SingleInstrument"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
 testRunner.And("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
    testRunner.And("I have entered \'abcdef\' in the \'End Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
    testRunner.And("I have entered \'349-Test Certificate 1\' in the \'Certificate Number\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
    testRunner.And("I have entered \'01/12/2014\' in the \'Start Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.When("I press the \'Upload\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
    testRunner.And("I am shown the message \"The value \'abcdef\' is not valid for End Date.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save form from New Certificate Upload page with  End Date < Start Date")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void SaveFormFromNewCertificateUploadPageWithEndDateStartDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save form from New Certificate Upload page with  End Date < Start Date", new string[] {
                        "SingleInstrument"});
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
 testRunner.And("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
    testRunner.And("I have entered \'01/01/2015\' in the \'Start Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
    testRunner.And("I have entered \'349-Test Certificate 1\' in the \'Certificate Number\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
    testRunner.And("I have entered \'01/12/2014\' in the \'End Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.When("I press the \'Upload\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
    testRunner.And("I am shown the message \"End Date must be after Start Date\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save form from New Certificate Upload page with existing Certificate Number")]
        [NUnit.Framework.CategoryAttribute("SingleCalibrationCertificate")]
        public virtual void SaveFormFromNewCertificateUploadPageWithExistingCertificateNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save form from New Certificate Upload page with existing Certificate Number", new string[] {
                        "SingleCalibrationCertificate"});
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
 testRunner.And("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
    testRunner.And("I have entered \'349-Test Certificate 1\' in the \'Certificate Number\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
    testRunner.And("I have entered \'01/01/2014\' in the \'Start Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
    testRunner.And("I have entered \'01/12/2014\' in the \'End Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.When("I press the \'Upload\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
 testRunner.Then("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 74
    testRunner.And("I am shown the message \"A certificate with that Certificate Number already exists" +
                    " for this customer.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save form from New Certificate Upload page with no file selected")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void SaveFormFromNewCertificateUploadPageWithNoFileSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save form from New Certificate Upload page with no file selected", new string[] {
                        "SingleInstrument"});
#line 77
this.ScenarioSetup(scenarioInfo);
#line 78
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 79
 testRunner.And("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
    testRunner.And("I have entered \'349-Test Certificate 1\' in the \'Certificate Number\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
    testRunner.And("I have entered \'01/01/2014\' in the \'Start Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
    testRunner.And("I have entered \'01/12/2014\' in the \'End Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
    testRunner.And("In the \'Certificate\' textbox I have selected a file that is not of type \'.pdf\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.When("I press the \'Upload\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 85
 testRunner.Then("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 86
    testRunner.And("I am shown the message \"File must be of type .pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save form from New Certificate Upload page with invalid file type")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void SaveFormFromNewCertificateUploadPageWithInvalidFileType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save form from New Certificate Upload page with invalid file type", new string[] {
                        "SingleInstrument"});
#line 90
this.ScenarioSetup(scenarioInfo);
#line 91
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
 testRunner.And("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
    testRunner.And("I have entered \'349-Test Certificate 1\' in the \'Certificate Number\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
    testRunner.And("I have entered \'01/01/2014\' in the \'Start Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
    testRunner.And("I have entered \'01/12/2014\' in the \'End Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
    testRunner.And("In the \'Certificate\' textbox I have selected a file that is not of type \'.pdf\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.When("I press the \'Upload\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
 testRunner.Then("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 99
    testRunner.And("I am shown the message \"File must be of type .pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save complete form from New Certificate Upload page")]
        [NUnit.Framework.CategoryAttribute("SingleInstrument")]
        public virtual void SaveCompleteFormFromNewCertificateUploadPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save complete form from New Certificate Upload page", new string[] {
                        "SingleInstrument"});
#line 102
this.ScenarioSetup(scenarioInfo);
#line 103
 testRunner.Given("I am signed in as \'sam.morris\' with the password \'!12345678A\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
 testRunner.And("I am on the \'New Certificate Upload\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
    testRunner.And("I have entered \'349-Test Certificate 1\' in the \'Certificate Number\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
    testRunner.And("I have entered \'01/01/2014\' in the \'Start Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
    testRunner.And("I have entered \'01/12/2014\' in the \'End Date\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
    testRunner.And("In the \'Certificate\' textbox I have selected a file that is of type \'.pdf\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.When("I press the \'Upload\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
 testRunner.Then("I am on the \'Instrument Details\' page for \'349-Test Instrument 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 111
    testRunner.And("I am shown the message \"Certificate 349-Test Certificate 1 uploaded successfully\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
    testRunner.And("In the \'Certificates\' panel there is a row for \'349-Test Certificate 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
